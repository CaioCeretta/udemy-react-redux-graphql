{"version":3,"file":"static/js/576.0cca0606.chunk.js","mappings":"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","sources":["components/Button/index.tsx","components/CheckoutItem/index.tsx","components/payment-form/index.tsx","components/Checkout/index.tsx","store/cart/cart.selector.ts","store/user/user.selector.ts","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import React, { ButtonHTMLAttributes, ReactNode } from 'react'\n\nimport './styles.scss'\n\nexport enum BUTTON_TYPE_CLASSES {\n  base = 'base',\n  google = 'google-sign-in',\n  inverted = 'inverted'\n}\n\n\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  paymentLoading?: boolean;\n  isPayment?: boolean;\n  children: ReactNode;\n  type: \"submit\" | \"button\";\n  buttonType?: keyof typeof BUTTON_TYPE_CLASSES\n}\n\n/*\nOR\n\ninterface ButtonProps {\n  paymentLoading?: boolean;\n  isPayment: boolean;\n  children: ReactNode;\n  buttonType: keyof typeof BUTTON_TYPE_CLASSES\n} & ButtonHTMLAttributes<HTMLButtonElement>\n\n\n*/\n\nexport default function Button({ paymentLoading, type, isPayment = false, children, buttonType = 'base', ...otherProps }: ButtonProps) {\n\n  return (\n    <button\n    type={type}\n    disabled={paymentLoading}\n    className={`${isPayment ? 'payment-button' : '' } button-container\n    ${buttonType === 'base' ? '' : buttonType}`} {...otherProps}>\n      {children}\n    </button>\n  )\n}\n","import \"./styles.scss\";\n\nimport React from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItemToCart, clearItemFromCart, removeItemFromCart } from '../../store/cart/cart.action';\nimport { selectCartItems } from \"../../store/cart/cart.selector\";\nimport { CartItem } from \"@/src/store/cart/cart.types\";\n\ninterface CheckoutItemProps {\n  cartItem: CartItem\n}\n\nexport const CheckoutItem = ({ cartItem }: CheckoutItemProps) => {\n\n  const dispatch = useDispatch();\n\n  const cartItems = useSelector(selectCartItems)\n\n\n  const clearItemHandler = () => dispatch(clearItemFromCart(cartItems, cartItem));\n  const addItemHandler = () => dispatch(addItemToCart(cartItems, cartItem));\n  const removeItemHandler = () => dispatch(removeItemFromCart(cartItems, cartItem));\n\n  return (\n    <div className=\"checkout-item-container\">\n      <div className=\"image-container\">\n        <img src={cartItem.imageUrl} alt={cartItem.name} />\n      </div>\n      <span className=\"name\">{cartItem.name}</span>\n      <span className=\"quantity\">\n        <button onClick={removeItemHandler} className=\"arrow\">\n          &#10094;\n        </button>\n        <span className=\"value\">{cartItem.quantity}</span>\n        <button onClick={addItemHandler} className=\"arrow\">\n          &#10095;\n        </button>\n\n      </span>\n      <span className=\"price\">{cartItem.price}</span>\n      <div className=\"remove=button\">\n        <span onClick={clearItemHandler}>&#10005; </span>\n      </div>\n    </div>\n  );\n};\n","import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { FormEvent, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\n\n\nimport { selectCartTotal } from '../../store/cart/cart.selector';\nimport { selectCurrentUser } from '../../store/user/user.selector';\n\n\nimport Button, { BUTTON_TYPE_CLASSES } from '../Button';\n\nimport { StripeCardElement } from '@stripe/stripe-js';\nimport './styles.scss';\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const amount = useSelector(selectCartTotal);\n  const currentUser = useSelector(selectCurrentUser);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n  const paymentHandler = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessingPayment(true);\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ amount: amount * 100 }),\n    }).then((res) => {\n      return res.json();\n    });\n\n    const clientSecret = response.paymentIntent.client_secret;\n\n    const cardDetails = elements.getElement(CardElement)\n\n    if(!cardDetails) {\n      return;\n    }\n\n    const paymentResult = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: cardDetails,\n        billing_details: {\n          name: currentUser ? currentUser.displayName : 'Caio Ceretta',\n        },\n      },\n    });\n\n    const ifValidCardElement = (card: StripeCardElement | null):\n      card is StripeCardElement => card !== null\n\n    if(!ifValidCardElement(cardDetails)) return;\n\n\n    setIsProcessingPayment(false);\n\n    if (paymentResult.error) {\n      alert(paymentResult.error.message);\n    } else {\n      if (paymentResult.paymentIntent.status === 'succeeded') {\n        alert('Payment Successful!');\n      }\n    }\n  };\n\n  return (\n    <div className=\"payment-form-container\">\n      <form className='form-container' onSubmit={paymentHandler}>\n        <h2>Credit Card Payment:</h2>\n        <CardElement />\n        <Button\n          type='submit'\n          buttonType={BUTTON_TYPE_CLASSES.inverted}\n          paymentLoading={isProcessingPayment}\n          isPayment={true}\n        >\n          Pay Now\n        </Button>\n      </form>\n    </div> \n  );\n};\nexport default PaymentForm;\n","import React from \"react\";\n\nimport { selectCartItems, selectCartTotal } from '../../store/cart/cart.selector';\n\n\n\nimport { useSelector } from \"react-redux\";\nimport { CheckoutItem } from \"../CheckoutItem\";\nimport \"./styles.scss\";\nimport PaymentForm from \"../payment-form\";\n\nexport function Checkout() {\n\n  const cartItems = useSelector(selectCartItems);\n  const total = useSelector(selectCartTotal);\n\n  return (\n    <div>\n      <div className=\"checkout-container\">\n        <div className=\"checkout-header\">\n          <div className=\"header-block\">\n            <span>Product</span>\n          </div>\n          <div className=\"header-block\">\n            <span>Description</span>\n          </div>\n          <div className=\"header-block\">\n            <span>Quantity</span>\n          </div> \n          <div className=\"header-block\">\n            <span>Price</span>\n          </div>\n          <div className=\"header-block\">\n            <span>Remove</span>\n          </div>\n        </div>\n          {cartItems.map((item) => \n            <CheckoutItem key={item.id} cartItem={item} />  \n          )}\n          <span className=\"total\">Total: $ {total}</span>\n          <PaymentForm />\n\n        </div>\n    </div>\n  );\n}\n","\n\nimport { createSelector } from 'reselect'\n\nimport { CART_STATE } from './cart.reducer';\n\nimport { RootState } from \"../store\";\n\n\nconst selectCartReducer = (state: RootState):CART_STATE => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCartReducer],\n  (cart) => cart.cartItems\n)\n\nexport const selectIsCartOpen = createSelector(\n  [selectCartReducer],\n  (cart) => cart.isCartOpen\n);\n\nexport const selectCartCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>  cartItems.reduce((acc, val) => {\n    return acc + val.quantity;\n  }, 0)\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((acc, val) => {\n    return acc + val.quantity * val.price;\n  }, 0)\n)\n","import { createSelector } from \"reselect\";\n\nimport { RootState } from \"../store\";\n\nimport { UserState } from \"./user.reducer\";\n\nexport const selectUserReducer = (state: RootState): UserState => state.user\n\nexport const selectCurrentUser = createSelector(\n  selectUserReducer,\n  (userState) => userState.currentUser);","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["BUTTON_TYPE_CLASSES","Button","_ref","paymentLoading","type","isPayment","children","buttonType","otherProps","_jsx","disabled","className","concat","CheckoutItem","cartItem","dispatch","useDispatch","cartItems","useSelector","selectCartItems","_jsxs","src","imageUrl","alt","name","onClick","removeItemHandler","removeItemFromCart","quantity","addItemHandler","addItemToCart","price","clearItemHandler","clearItemFromCart","PaymentForm","stripe","useStripe","elements","useElements","amount","selectCartTotal","currentUser","selectCurrentUser","isProcessingPayment","setIsProcessingPayment","useState","onSubmit","async","e","preventDefault","clientSecret","fetch","method","headers","body","JSON","stringify","then","res","json","paymentIntent","client_secret","cardDetails","getElement","CardElement","paymentResult","confirmCardPayment","payment_method","card","billing_details","displayName","error","alert","message","status","inverted","Checkout","total","map","item","id","selectCartReducer","state","cart","createSelector","selectIsCartOpen","isCartOpen","selectCartCount","reduce","acc","val","user","userState","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}